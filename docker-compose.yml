services:
  kafka:
    image: docker.io/bitnami/kafka:latest
    ports:
      - "9094:9094"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      # KRraft settings 
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'

  # apacha.kafka.console.consumer:
  #   image: ${DOCKER_REGISTRY-}apachakafkaconsoleconsumer
  #   build:
  #     context: .
  #     dockerfile: Apacha.Kafka.Console.Consumer/Dockerfile

  # apacha.kafka.console.producer:
  #   image: ${DOCKER_REGISTRY-}apachakafkaconsoleproducer
  #   build:
  #     context: .
  #     dockerfile: Apacha.Kafka.Console.Producer/Dockerfile

volumes:
  kafka_data:
    driver: local

